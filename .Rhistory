<<<<<<< HEAD
?log(())
?log()
log(125/50)
0.9162907/3
x<- c(5,9,2,3,4,6,7,0,8,12,2,9)
x[2]
x[2:4]
x[c(2,3,6)]
y<-c(33,44,29,16,25,45,33,19,54,22,21,49,11,24,56)
y<-c(33,44,29,16,25,45,33,19,54,22,21,49,11,24,56)
fivenum(y)
summary(y)
x <- matrix(c(3,2,-1,1))
x
str(trees)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggthemes)
library(plotly)
glimpse(trees)
gunit <- ggplot(trees,aes(Girth, Height)) + geom_point() + theme_tufte()
gunit
gunit <- ggplot(trees,aes(Girth, Height)) + geom_point() + theme_tufte() + geom_smooth()
gunit
gunit <- ggplot(trees,aes(Girth, Height)) + geom_point() + theme_tufte() + geom_smooth()
ggplotly(gunit)
gunit <- ggplot(trees,aes(Girth, Height)) + geom_point(aes(alpha = Volume)) + theme_tufte() + geom_smooth()
ggplotly(gunit)
?rnorm
dnorm(3) - dnorm(1)
qnorm(.95)
pnorm(2.5)
dnorm(q = .5)
dnorm(x = .5)
pois.sim <- rpois(lambda = 5)
pois.sim <- rpois(n = 10, lambda = 5)
summary(pois.sim)
rgamma(beta = 2)
?rgamma()
rgamma(n = 100, shape = .5)
gam.sim <- rgamma(n = 100, shape = .5)
par(mfrow = c(1,2))
hist(gam.sim)
boxplot(gam.sim, notch = TRUE)
?hist()
gam.sim <- rgamma(n = 100, shape = .5)
par(mfrow = c(1,2))
hist(gam.sim, xlab = 'Simulated Gamma Distribution')
boxplot(gam.sim, notch = TRUE, col = 'cadetblue')
gam.sim <- rgamma(n = 100, shape = .5)
par(mfrow = c(1,2))
hist(gam.sim, xlab = 'Simulated Gamma Distribution', col = 'orange')
boxplot(gam.sim, notch = TRUE, col = 'cadetblue')
gam.sim <- rgamma(n = 100, shape = .5)
par(mfrow = c(1,2))
hist(gam.sim, xlab = 'Simulated Gamma Distribution', col = 'orange',
main = 'Simulated Gamma Histogram')
boxplot(gam.sim, notch = TRUE, col = 'cadetblue', main = 'Boxplot')
gam.sim <- rgamma(n = 100, shape = .5)
par(mfrow = c(1,2))
hist(gam.sim, xlab = 'Simulated Gamma Distribution', col = 'orange',
main = 'Simulated Gamma Histogram')
boxplot(gam.sim, notch = TRUE, col = 'cadetblue', main = 'Boxplot of Gamma Distribution')
gam.sim <- rgamma(n = 100, shape = .5)
par(mfrow = c(1,2))
hist(gam.sim, xlab = 'Simulated Gamma Distribution', col = 'orange',
main = 'Simulated Gamma Histogram')
boxplot(gam.sim, notch = TRUE, col = 'cadetblue', main = 'Boxplot of Gamma Distribution', main.cex = .85)
gam.sim <- rgamma(n = 100, shape = .5)
par(mfrow = c(1,2))
hist(gam.sim, xlab = 'Simulated Gamma Distribution', col = 'orange',
main = 'Simulated Gamma Histogram')
boxplot(gam.sim, notch = TRUE, col = 'cadetblue', main = 'Boxplot of Gamma Distribution', main.cex = .5)
gam.sim <- rgamma(n = 100, shape = .5)
par(mfrow = c(1,2))
hist(gam.sim, xlab = 'Simulated Gamma Distribution', col = 'orange',
main = 'Simulated Gamma Histogram')
boxplot(gam.sim, notch = TRUE, col = 'cadetblue', main = 'Boxplot of Gamma Distribution', main.cex = .5)
gam.sim <- rgamma(n = 100, shape = .5)
par(mfrow = c(1,2))
hist(gam.sim, xlab = 'Simulated Gamma Distribution', col = 'orange',
main = 'Simulated Gamma Histogram')
boxplot(gam.sim, notch = TRUE, col = 'cadetblue', main = 'Gamma Boxplot', main.cex = .5)
boxplot()
?boxplot
gam.sim <- rgamma(n = 100, shape = .5)
par(mfrow = c(1,2))
hist(gam.sim, xlab = 'Simulated Gamma Distribution', col = 'orange',
main = 'Simulated Gamma Histogram')
boxplot(gam.sim, notch = TRUE, col = 'cadetblue', main = 'Gamma Boxplot', main.cex = .5, bty = 'n')
gam.sim <- rgamma(n = 100, shape = .5)
par(mfrow = c(1,2))
hist(gam.sim, xlab = 'Simulated Gamma Distribution', col = 'orange',
main = 'Simulated Gamma Histogram')
boxplot(gam.sim, notch = TRUE, col = 'cadetblue', main = 'Gamma Boxplot', main.cex = .5, outline = FALSE)
gam.sim <- rgamma(n = 100, shape = .5)
par(mfrow = c(1,2))
hist(gam.sim, xlab = 'Simulated Gamma Distribution', col = 'orange',
main = 'Simulated Gamma Histogram')
boxplot(gam.sim, notch = TRUE, col = 'cadetblue', main = 'Gamma Boxplot', main.cex = .5, outline = TRUE)
data(nhtemp)
plot(nhtemp)
dnorm()
?dnorm()
gam.sim <- rgamma(n = 100, shape = .5)
par(mfrow = c(1,2))
hist(gam.sim, xlab = 'Simulated Gamma Values', col = 'orange',
main = 'Gamma Histogram')
boxplot(gam.sim, col = 'cadetblue', main = 'Gamma Boxplot', main.cex = .5)
source('~/.active-rstudio-document', echo=TRUE)
r <- ?log
?log
r <- (log(23.5/11.1))/20
r
N47 <- 11.1(log(0.0375*47))
N47 <- 11.1(exp(0.0375*47))
N47 <- 11.1*(exp(0.0375*47))
N47
install.packages(popbio)
install.packages("popbio")
library(popbio)
=======
sim10runs[i] <- StochasticSim(steps = 50,b=.55,d=.5, N0=10)
}
propextinction10 <- length(which(sim10runs == 0))/length(sim10runs)
paste('Extinction rate is:',propextinction10)
paste('Final Population Size after each simulation is:'print(sim10runs))
sim10runs <- vector(mode = 'numeric',length = 50)
for(i in 1:50){
sim10runs[i] <- StochasticSim(steps = 50,b=.55,d=.5, N0=10)
}
propextinction10 <- length(which(sim10runs == 0))/length(sim10runs)
paste('Extinction rate is:',propextinction10)
paste('Final Population Size after each simulation is:',print(sim10runs))
sim10runs <- vector(mode = 'numeric',length = 50)
for(i in 1:50){
sim10runs[i] <- StochasticSim(steps = 50,b=.55,d=.5, N0=10)
}
propextinction10 <- length(which(sim10runs == 0))/length(sim10runs)
paste('Extinction rate is:',propextinction10)
paste('Final Population Size after each simulation is:',as.string(sim10runs))
sim10runs <- vector(mode = 'numeric',length = 50)
for(i in 1:50){
sim10runs[i] <- StochasticSim(steps = 50,b=.55,d=.5, N0=10)
}
propextinction10 <- length(which(sim10runs == 0))/length(sim10runs)
paste('Extinction rate is:',propextinction10)
paste('Final Population Size after each simulation is:',as.character(sim10runs))
sim10runs <- vector(mode = 'numeric',length = 50)
for(i in 1:50){
sim10runs[i] <- StochasticSim(steps = 50,b=.55,d=.5, N0=10)
}
propextinction10 <- length(which(sim10runs == 0))/length(sim10runs)
paste('Extinction rate is:',propextinction10)
paste('Final Population Size after each simulation is:',sim10runs, collapse = '')
sim10runs <- vector(mode = 'numeric',length = 50)
for(i in 1:50){
sim10runs[i] <- StochasticSim(steps = 50,b=.55,d=.5, N0=10)
}
propextinction10 <- length(which(sim10runs == 0))/length(sim10runs)
paste('Extinction rate is:',propextinction10)
paste(sim10runs, collapse = '')
sim10runs <- vector(mode = 'numeric',length = 50)
for(i in 1:50){
sim10runs[i] <- StochasticSim(steps = 50,b=.55,d=.5, N0=10)
}
propextinction10 <- length(which(sim10runs == 0))/length(sim10runs)
paste('Extinction rate is:',propextinction10)
paste(sim10runs)
sim10runs <- vector(mode = 'numeric',length = 50)
for(i in 1:50){
sim10runs[i] <- StochasticSim(steps = 50,b=.55,d=.5, N0=10)
}
propextinction10 <- length(which(sim10runs == 0))/length(sim10runs)
paste('Extinction rate is:',propextinction10)
paste('Simulation results are:',paste(sim10runs))
sim10runs <- vector(mode = 'numeric',length = 50)
for(i in 1:50){
sim10runs[i] <- StochasticSim(steps = 50,b=.55,d=.5, N0=10)
}
propextinction10 <- length(which(sim10runs == 0))/length(sim10runs)
paste('Extinction rate is:',propextinction10)
paste(sim10runs)
age <- 0:4
sx <- c(740,280,105,32,0)
bx <- c(0,0.4,1.3,3,8,NA)
lx <- sx/740
print(lx)
age <- 0:4
sx <- c(740,280,105,32,0)
bx <- c(0,0.4,1.3,3,8,NA)
lx <- sx/740
print(lx)
as.vector(px) <- for(i in 1:length(lx)){
px <- lx[i+1]/lx[i]
}
px <- for(i in 1:length(lx)){
px <- lx[i+1]/lx[i]
}
px
px <- vector(mode="numeric", length=4)
px <- for(i in 1:length(lx)){
px <- lx[i+1]/lx[i]
}
px
px <- vector(mode="numeric", length=4)
for(i in 1:length(lx)){
px <- lx[i+1]/lx[i]
}
px
age <- 0:4
sx <- c(740,280,105,32,0)
bx <- c(0,0.4,1.3,3,8,NA)
lx <- sx/740
print(lx)
px <- vector(mode="numeric", length=4)
for(i in 1:length(lx)){
px <- lx[i+1]/lx[i]
}
age <- 0:4
sx <- c(740,280,105,32,0)
bx <- c(0,0.4,1.3,3,8,NA)
lx <- sx/740
lx
px <- vector(mode="numeric", length=4)
for(i in 1:length(lx)){
px <- lx[i+1]/lx[i]
}
px
lx[2]
[3]
lx[3]
lx[4]
lx[5]
px <- vector(mode="numeric", length=4)
for(i in 1:3){
px <- lx[i+1]/lx[i]
}
px
px <- vector(mode="numeric", length=4)
px
for(i in 1:3){
px <- lx[i+1]/lx[i]
}
px
class(px)
length(px)
px <- vector()
for(i in 1:3){
px <- lx[i+1]/lx[i]
}
px
lx
px <- vector()
px <- for(i in 1:length(lx)){
px[i] <- lx[i+1]/lx[i]
}
px
px <- vector(length = 5)
px <- for(i in 1:length(lx)){
px[i] <- lx[i+1]/lx[i]
}
px
px <- for(i in 1:length(lx)){
px[i] <- (lx[i+1]/lx[i])
}
px
px <- vector(mode = 'numeric',length = 5)
px <- for(i in 1:length(lx)){
px[i] <- (lx[i+1]/lx[i])
}
px
px <- vector(mode = 'numeric',length = 5)
for(i in 1:length(lx)){
px[i] <- (lx[i+1]/lx[i])
}
px
lifetable <- cbind(age,sx,lx,px,bx)
age <- 0:4
>>>>>>> fc32302baed3f94c977aac28948659f7fc10a679
sx <- c(740,280,105,32,0)
sx
Time <- c(1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964)
Time
NumDoves <- c(4, 16, 45, 100, 205, 675, 1900, 4650, 10200, 18885)
NumDoves
LnNumDovs <- log(NumDoves)
LnNumDovs
lm(LnNumDovs~Time)
plot(x=Time,y=LnNumDoves)
plot(x = Time, y = LnNumDoves)
plot(Time, LnNumDoves)
Time <- c(1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964)
Time
NumDoves <- c(4, 16, 45, 100, 205, 675, 1900, 4650, 10200, 18885)
NumDoves
LnNumDovs <- log(NumDoves)
LnNumDovs
plot(Time, LnNumDoves)
Time <- c(1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964)
Time
NumDoves <- c(4, 16, 45, 100, 205, 675, 1900, 4650, 10200, 18885)
NumDoves
LnNumDovs <- log(NumDoves)
LnNumDovs
plot(Time, LnNumDoves)
LnNumDoves <- log(NumDoves)
LnNumDoves
plot(Time, LnNumDoves)
for(val in Time)
print(val)
ExponEqu <- 4*exp(0.9367*Time)
TimeSinceStart <- c(1,2,3,4,5,6,7,8,9)
TimeSinceStart
ExponEqu <- 4*exp(0.9367*TimeSinceStart)
ExponEqu
library(knitr)
age <- 0:4
sx <- c(740,280,105,32,0)
bx <- c(0,0.4,1.3,3.8,NA)
lx <- sx/740
px <- vector(mode = 'numeric',length = 5)
for(i in 1:length(lx)){
px[i] <- (lx[i+1]/lx[i])
}
lifetable <- cbind(age,sx,lx,px,bx)
colnames(lifetable) <- c('Age','S_x','l_x','p_x','b_x')
lifetable <- as.data.frame(lifetable)
<<<<<<< HEAD
kable(lifetable)
lxbx <- lx*bx
library(knitr)
age <- 0:4
sx <- c(740,280,105,32,0)
bx <- c(0,0.4,1.3,3.8,NA)
lx <- sx/740
lxbx <- lx*bx
xlxbx <- x*lx*bx
library(knitr)
age <- 0:4
sx <- c(740,280,105,32,0)
bx <- c(0,0.4,1.3,3.8,NA)
lx <- sx/740
lxbx <- lx*bx
agelxbx <- age*lx*bx
px <- vector(mode = 'numeric',length = 5)
for(i in 1:length(lx)){
px[i] <- (lx[i+1]/lx[i])
}
pxbx1 <- ((px*bx) + 1)
lifetable2 <- cbind(age,sx,lx,px,bx,lxbx,agelxbx,pxbx1)
colnames(lifetable2) <- c('Age','S_x','l_x','p_x','b_x', 'lx_bx', 'x_lx_bx', 'px_bx+1')
lifetable2 <- as.data.frame(lifetable2)
kable(lifetable2)
c <- 24/(1^(3/2)
c <- 24/(1^(3/2))
c <- 24/1^(3/2)
c
c <- 24/1^(-3/2)
c
w <- 24*(0.5^(-3/2))
w
t <- -0.29518/-1.7
t
pxbx1 <- vector(mode = 'numeric',length = 5)
for(i in 1:length(px)){
pxbx1[i] <- (px*bx[i+1])
}
pxbx1
lifetable2 <- cbind(age,sx,lx,px,bx,lxbx,agelxbx,pxbx1)
colnames(lifetable2) <- c('Age','S_x','l_x','p_x','b_x', 'lx_bx', 'x_lx_bx', 'px_bx+1')
lifetable2 <- as.data.frame(lifetable2)
kable(lifetable2)
x <- matrix(c(3, 2, -1, 1), nrow = 2, byrow = T)
x
leslie <- matrix(0.15136, 0.4875, 1.15824, 0, 0.3784, 0, 0, 0, 0, 0.3750, 0, 0, 0, 0, 0.3048, 0, nrow = 4, byrow = T)
leslie <- matrix(c(0.15136, 0.4875, 1.15824, 0, 0.3784, 0, 0, 0, 0, 0.3750, 0, 0, 0, 0, 0.3048, 0), nrow = 4, byrow = T)
leslie
leslie <- as.data.frame(leslie)
kable(leslie)
projection1 <- matrix(c(70, 40, 20, 10), nrow = 4, byrow = T)
projection1
leslie %*% projection1
projection1output <- leslie %*% projection1
is.data.frame(lifetable_6)
=======
head(lifetable)
>>>>>>> fc32302baed3f94c977aac28948659f7fc10a679
lxbx <- lifetable$l_x*lifetable$b_x
xlxbx <- lifetable$Age*lifetable$l_x*lifetable$b_x
pxbx_1 <- vector(length =5, mode= 'double')
for(i in 1:5){
pxbx_1[i] <- lifetable$p_x[i]*lifetable$b_x[i+1]
}
lifetable_6 <- cbind(lifetable, lxbx, xlxbx, pxbx_1)
colnames(lifetable_6) <- c('Age','S_x','l_x','p_x','b_x', 'l_x*b_x', 'x*l_x*b_x', 'p_x*b_x+1')
lifetable_6 <- as.data.frame(lifetable_6)
kable(lifetable_6)
library(knitr)
lxbx <- lifetable$l_x*lifetable$b_x
xlxbx <- lifetable$Age*lifetable$l_x*lifetable$b_x
pxbx_1 <- vector(length =5, mode= 'double')
for(i in 1:5){
pxbx_1[i] <- lifetable$p_x[i]*lifetable$b_x[i+1]
}
lifetable_6 <- cbind(lifetable, lxbx, xlxbx, pxbx_1)
colnames(lifetable_6) <- c('Age','S_x','l_x','p_x','b_x', 'l_x*b_x', 'x*l_x*b_x', 'p_x*b_x+1')
lifetable_6 <- as.data.frame(lifetable_6)
kable(lifetable_6)
<<<<<<< HEAD
is.data.frame(lifetable_6)
plot(Time, LnNumDoves, bty = 'n', xlab = 'Year', ylab = 'Ln Number of Doves', main = 'ln(N) vs. t', pch = 17)
TimeSinceStart <- 0:9
TimeSinceStart
ExponEqu <- 4*exp(0.9367*TimeSinceStart)
val <- vector(mode = 'double', length = 10)
for(i in 1:length(TimeSinceStart)){
val[i] <- 4*exp(0.9367*TimeSinceStart[i])
}
val <- round(val)
newpoptable <- cbind(Time,val)
colnames(newpoptable) <- c('Year','Population number')
library(knitr)
kable(newpoptable)
r <- (log(23.5/11.1))/20
r
=======
c <- 24/(1^(-3/2))
c <- 24/(1^(-3/2))
c
c <- 24/1^(-3/2)
c
?aov()
op <- options(contrasts = c("contr.helmert", "contr.poly"))
( npk.aov <- aov(yield ~ block + N*P*K, npk) )
summary(npk.aov)
coefficients(npk.aov)
## to show the effects of re-ordering terms contrast the two fits
aov(yield ~ block + N * P + K, npk)
aov(terms(yield ~ block + N * P + K, keep.order = TRUE), npk)
install.packages('spatstat')
>>>>>>> fc32302baed3f94c977aac28948659f7fc10a679
