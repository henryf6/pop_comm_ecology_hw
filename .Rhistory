sim50runs <- vector(mode = 'numeric',length = 50)
for(i in 1:50){
sim50runs[i] <- StochasticSim(steps = 50,b=.55,d=.5, N0=50)
}
propextinction50 <- length(which(sim50runs == 0))/length(sim50runs)
paste('Extinction rate is:',propextinction50)
sim50runs
sim10runs <- vector(mode = 'numeric',length = 50)
for(i in 1:50){
sim10runs[i] <- StochasticSim(steps = 50,b=.55,d=.5, N0=10)
}
propextinction10 <- length(which(sim10runs == 0))/length(sim10runs)
paste('Extinction rate is:',propextinction10)
paste('Final Population Size after each simulation is:'print(sim10runs))
sim10runs <- vector(mode = 'numeric',length = 50)
for(i in 1:50){
sim10runs[i] <- StochasticSim(steps = 50,b=.55,d=.5, N0=10)
}
propextinction10 <- length(which(sim10runs == 0))/length(sim10runs)
paste('Extinction rate is:',propextinction10)
paste('Final Population Size after each simulation is:',print(sim10runs))
sim10runs <- vector(mode = 'numeric',length = 50)
for(i in 1:50){
sim10runs[i] <- StochasticSim(steps = 50,b=.55,d=.5, N0=10)
}
propextinction10 <- length(which(sim10runs == 0))/length(sim10runs)
paste('Extinction rate is:',propextinction10)
paste('Final Population Size after each simulation is:',as.string(sim10runs))
sim10runs <- vector(mode = 'numeric',length = 50)
for(i in 1:50){
sim10runs[i] <- StochasticSim(steps = 50,b=.55,d=.5, N0=10)
}
propextinction10 <- length(which(sim10runs == 0))/length(sim10runs)
paste('Extinction rate is:',propextinction10)
paste('Final Population Size after each simulation is:',as.character(sim10runs))
sim10runs <- vector(mode = 'numeric',length = 50)
for(i in 1:50){
sim10runs[i] <- StochasticSim(steps = 50,b=.55,d=.5, N0=10)
}
propextinction10 <- length(which(sim10runs == 0))/length(sim10runs)
paste('Extinction rate is:',propextinction10)
paste('Final Population Size after each simulation is:',sim10runs, collapse = '')
sim10runs <- vector(mode = 'numeric',length = 50)
for(i in 1:50){
sim10runs[i] <- StochasticSim(steps = 50,b=.55,d=.5, N0=10)
}
propextinction10 <- length(which(sim10runs == 0))/length(sim10runs)
paste('Extinction rate is:',propextinction10)
paste(sim10runs, collapse = '')
sim10runs <- vector(mode = 'numeric',length = 50)
for(i in 1:50){
sim10runs[i] <- StochasticSim(steps = 50,b=.55,d=.5, N0=10)
}
propextinction10 <- length(which(sim10runs == 0))/length(sim10runs)
paste('Extinction rate is:',propextinction10)
paste(sim10runs)
sim10runs <- vector(mode = 'numeric',length = 50)
for(i in 1:50){
sim10runs[i] <- StochasticSim(steps = 50,b=.55,d=.5, N0=10)
}
propextinction10 <- length(which(sim10runs == 0))/length(sim10runs)
paste('Extinction rate is:',propextinction10)
paste('Simulation results are:',paste(sim10runs))
sim10runs <- vector(mode = 'numeric',length = 50)
for(i in 1:50){
sim10runs[i] <- StochasticSim(steps = 50,b=.55,d=.5, N0=10)
}
propextinction10 <- length(which(sim10runs == 0))/length(sim10runs)
paste('Extinction rate is:',propextinction10)
paste(sim10runs)
age <- 0:4
sx <- c(740,280,105,32,0)
bx <- c(0,0.4,1.3,3,8,NA)
lx <- sx/740
print(lx)
age <- 0:4
sx <- c(740,280,105,32,0)
bx <- c(0,0.4,1.3,3,8,NA)
lx <- sx/740
print(lx)
as.vector(px) <- for(i in 1:length(lx)){
px <- lx[i+1]/lx[i]
}
px <- for(i in 1:length(lx)){
px <- lx[i+1]/lx[i]
}
px
px <- vector(mode="numeric", length=4)
px <- for(i in 1:length(lx)){
px <- lx[i+1]/lx[i]
}
px
px <- vector(mode="numeric", length=4)
for(i in 1:length(lx)){
px <- lx[i+1]/lx[i]
}
px
age <- 0:4
sx <- c(740,280,105,32,0)
bx <- c(0,0.4,1.3,3,8,NA)
lx <- sx/740
print(lx)
px <- vector(mode="numeric", length=4)
for(i in 1:length(lx)){
px <- lx[i+1]/lx[i]
}
age <- 0:4
sx <- c(740,280,105,32,0)
bx <- c(0,0.4,1.3,3,8,NA)
lx <- sx/740
lx
px <- vector(mode="numeric", length=4)
for(i in 1:length(lx)){
px <- lx[i+1]/lx[i]
}
px
lx[2]
[3]
lx[3]
lx[4]
lx[5]
px <- vector(mode="numeric", length=4)
for(i in 1:3){
px <- lx[i+1]/lx[i]
}
px
px <- vector(mode="numeric", length=4)
px
for(i in 1:3){
px <- lx[i+1]/lx[i]
}
px
class(px)
length(px)
px <- vector()
for(i in 1:3){
px <- lx[i+1]/lx[i]
}
px
lx
px <- vector()
px <- for(i in 1:length(lx)){
px[i] <- lx[i+1]/lx[i]
}
px
px <- vector(length = 5)
px <- for(i in 1:length(lx)){
px[i] <- lx[i+1]/lx[i]
}
px
px <- for(i in 1:length(lx)){
px[i] <- (lx[i+1]/lx[i])
}
px
px <- vector(mode = 'numeric',length = 5)
px <- for(i in 1:length(lx)){
px[i] <- (lx[i+1]/lx[i])
}
px
px <- vector(mode = 'numeric',length = 5)
for(i in 1:length(lx)){
px[i] <- (lx[i+1]/lx[i])
}
px
lifetable <- cbind(age,sx,lx,px,bx)
age <- 0:4
sx <- c(740,280,105,32,0)
bx <- c(0,0.4,1.3,3,8,NA)
lx <- sx/740
lx
px <- vector(mode = 'numeric',length = 5)
for(i in 1:length(lx)){
px[i] <- (lx[i+1]/lx[i])
}
px
lifetable <- cbind(age,sx,lx,px,bx)
length(age)
length(age)
length(sx)
length(bx)
bx <- c(0,0.4,1.3,3.8,NA)
lx <- sx/740
lifetable <- cbind(age,sx,lx,px,bx)
kable(lifetable)
?cbind
colnames(lifetable) <- c('Age','S_x','l_x','p_x','b_x')
kable(lifetable)
with(lifetable, sum(lx*bx))
with(lifetable, sum(lx*bx, na.rm = true))
with(lifetable, sum(l_x*b_x, na.rm = true))
lifetabe$l_x*lifetable*b_x
lifetable$l_x*lifetable*b_x
lifetable$l_x
lifetable <- cbind(age,sx,lx,px,bx)
colnames(lifetable) <- c('Age','S_x','l_x','p_x','b_x')
lifetable$l_x
lifetable$l_x
class(lifetable)
lifetable<- as.data.frame(lifetable)
lifetable$l_x
lifetable$l_x*lifetable$b_x
sum(lifetable$l_x*lifetable$b_x, na.rm= TRUE)
r0 <- sum(lifetable$l_x*lifetable$b_x, na.rm= TRUE)
r0
with(lifetable, sum(x*l_x*b_x, na.rm))
with(lifetable, sum(age*l_x*b_x, na.rm))
with(lifetable, sum(age*l_x*b_x, na.rm = TRUE))
(with(lifetable, sum(age*l_x*b_x, na.rm = TRUE))/r0)
t = log(90076000/121005000)/(.012-.029)
t
Time <- c(1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964)
Time
NumDoves <- c(4, 16, 45, 100, 205, 675, 1900, 4650, 10200, 18885)
NumDoves
LnNumDoves <- log(NumDoves)
LnNumDoves
lm(LnNumDoves~Time)
Time <- c(1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964)
Time
NumDoves <- c(4, 16, 45, 100, 205, 675, 1900, 4650, 10200, 18885)
NumDoves
LnNumDoves <- log(NumDoves)
LnNumDoves
mod1 <- lm(LnNumDoves~Time)
summary(mod1)
str(mod1)
plot(Time, LnNumDoves)
plot(Time, LnNumDoves, bty = 'n')
plot(Time, LnNumDoves, bty = 'n', xlab = 'Year', ylab = 'Number of Doves', main = 'ln(N) vs. t')
lines(mod1)
#plot(Time, LnNumDoves, bty = 'n', xlab = 'Year', ylab = 'Number of Doves', #main = 'ln(N) vs. t')
plot(mod1)
plot(Time, LnNumDoves, bty = 'n', xlab = 'Year', ylab = 'Number of Doves', main = 'ln(N) vs. t')
plot(Time, LnNumDoves, bty = 'n', xlab = 'Year', ylab = 'Number of Doves', main = 'ln(N) vs. t')
line(mod1)
plot(Time, LnNumDoves, bty = 'n', xlab = 'Year', ylab = 'Number of Doves', main = 'ln(N) vs. t')
leslie <- matrix(c(0.15136, 0.4875, 1.15824, 0, 0.3784, 0, 0, 0, 0, 0.3750, 0, 0, 0, 0, 0.3048, 0), nrow = 4, byrow = T)
leslie
leslie <- as.data.frame(leslie)
kable(leslie)
library(knitr)
leslie <- matrix(c(0.15136, 0.4875, 1.15824, 0, 0.3784, 0, 0, 0, 0, 0.3750, 0, 0, 0, 0, 0.3048, 0), nrow = 4, byrow = T)
leslie
leslie <- as.data.frame(leslie)
kable(leslie)
leslie
#projection1 <- matrix(c(70, 40, 20, 10), nrow = 4, byrow = T)
#projection1
# HELP ME MULTIPLY MATRICES IN R UGH- basically the leslie matrix needs to be multiplied by the projection1 matrix and then those results should be the projection2 matrix that is again multiplied by the leslie matrix
#projection1output <- leslie %*% projection1
library(knitr)
leslie <- matrix(c(0.15136, 0.4875, 1.15824, 0, 0.3784, 0, 0, 0, 0, 0.3750, 0, 0, 0, 0, 0.3048, 0), nrow = 4, byrow = T)
leslie
leslie <- as.data.frame(leslie)
kable(leslie)
leslie
projection1 <- matrix(c(70, 40, 20, 10), nrow = 4, byrow = T)
projection1
# HELP ME MULTIPLY MATRICES IN R UGH- basically the leslie matrix needs to be multiplied by the projection1 matrix and then those results should be the projection2 matrix that is again multiplied by the leslie matrix
#projection1output <- leslie %*% projection1
library(knitr)
leslie <- matrix(c(0.15136, 0.4875, 1.15824, 0, 0.3784, 0, 0, 0, 0, 0.3750, 0, 0, 0, 0, 0.3048, 0), nrow = 4, byrow = T)
leslie
leslie <- as.data.frame(leslie)
kable(leslie)
leslie
projection1 <- matrix(c(70, 40, 20, 10), nrow = 4, byrow = T)
projection1
# HELP ME MULTIPLY MATRICES IN R UGH- basically the leslie matrix needs to be multiplied by the projection1 matrix and then those results should be the projection2 matrix that is again multiplied by the leslie matrix
projection1output <- leslie %*% projection1
as.matrix(leslie)
library(knitr)
leslie <- matrix(c(0.15136, 0.4875, 1.15824, 0, 0.3784, 0, 0, 0, 0, 0.3750, 0, 0, 0, 0, 0.3048, 0), nrow = 4, byrow = T)
leslie <- as.data.frame(leslie)
kable(leslie)
library(knitr)
leslie <- matrix(c(0.15136, 0.4875, 1.15824, 0, 0.3784, 0, 0, 0, 0, 0.3750, 0, 0, 0, 0, 0.3048, 0), nrow = 4, byrow = T)
leslie <- as.data.frame(leslie)
kable(leslie)
projection1 <- matrix(c(70, 40, 20, 10), nrow = 4, byrow = T)
projection1
# HELP ME MULTIPLY MATRICES IN R UGH- basically the leslie matrix needs to be multiplied by the projection1 matrix and then those results should be the projection2 matrix that is again multiplied by the leslie matrix
as.matrix(leslie)
projection1output <- leslie %*% projection1
class(leslie)
as.matrix(leslie)
class(leslie)
leslie <- as.matrix(leslie)
class(leslie)
library(knitr)
leslie <- matrix(c(0.15136, 0.4875, 1.15824, 0, 0.3784, 0, 0, 0, 0, 0.3750, 0, 0, 0, 0, 0.3048, 0), nrow = 4, byrow = T)
leslie <- as.data.frame(leslie)
kable(leslie)
projection1 <- matrix(c(70, 40, 20, 10), nrow = 4, byrow = T)
projection1
# HELP ME MULTIPLY MATRICES IN R UGH- basically the leslie matrix needs to be multiplied by the projection1 matrix and then those results should be the projection2 matrix that is again multiplied by the leslie matrix
leslie <- as.matrix(leslie)
projection1output <- leslie %*% projection1
print(projection1output)
print(projection2output)
projection2output <- leslie %*% projection1output
print(projection2output)
plot(Time, LnNumDoves, bty = 'n', xlab = 'Year', ylab = 'Number of Doves', main = 'ln(N) vs. t', pch = 16)
plot(Time, LnNumDoves, bty = 'n', xlab = 'Year', ylab = 'Number of Doves', main = 'ln(N) vs. t', pch = 17)
?round()
TimeSinceStart <- c(1,2,3,4,5,6,7,8,9)
TimeSinceStart
ExponEqu <- 4*exp(0.9367*TimeSinceStart)
ExponEqu
for(val in Time)
print(round(val))
TimeSinceStart <- c(1,2,3,4,5,6,7,8,9)
TimeSinceStart
ExponEqu <- 4*exp(0.9367*TimeSinceStart)
round(ExponEqu)
for(val in Time)
print(val)
length(TimeSinceStart)
?vector()
TimeSinceStart <- 1:9
TimeSinceStart
ExponEqu <- 4*exp(0.9367*TimeSinceStart)
round(ExponEqu)
val <- vector(mode = 'double', length = 9)
for(i in 1:length(TimeSinceStart)){
val[i] <- 4*exp(0.9367*TimeSinceStart)
}
print(val)
TimeSinceStart <- c(1,2,3,4,5,6,7,8,9)
TimeSinceStart
ExponEqu <- 4*exp(0.9367*TimeSinceStart)
round(ExponEqu)
val <- vector(mode = 'double', length = 9)
for(i in 1:length(TimeSinceStart)){
val[i] <- 4*exp(0.9367*TimeSinceStart)
}
val
TimeSinceStart <- c(1,2,3,4,5,6,7,8,9)
TimeSinceStart
ExponEqu <- 4*exp(0.9367*TimeSinceStart)
round(ExponEqu)
val <- vector(mode = 'double', length = 9)
for(i in 1:length(TimeSinceStart)){
val[i] <- 4*exp(0.9367*TimeSinceStart[i])
}
val
TimeSinceStart <- c(1,2,3,4,5,6,7,8,9)
TimeSinceStart
ExponEqu <- 4*exp(0.9367*TimeSinceStart)
round(ExponEqu)
val <- vector(mode = 'double', length = 9)
for(i in 1:length(TimeSinceStart)){
val[i] <- 4*exp(0.9367*TimeSinceStart[i])
}
val <- round(val)
val
TimeSinceStart <- c(1,2,3,4,5,6,7,8,9)
TimeSinceStart
ExponEqu <- 4*exp(0.9367*TimeSinceStart)
val <- vector(mode = 'double', length = 9)
for(i in 1:length(TimeSinceStart)){
val[i] <- 4*exp(0.9367*TimeSinceStart[i])
}
val <- round(val)
TimeSinceStart <- c(1,2,3,4,5,6,7,8,9)
TimeSinceStart
ExponEqu <- 4*exp(0.9367*TimeSinceStart)
val <- vector(mode = 'double', length = 9)
for(i in 1:length(TimeSinceStart)){
val[i] <- 4*exp(0.9367*TimeSinceStart[i])
}
val <- round(val)
val
TimeSinceStart <- c(1,2,3,4,5,6,7,8,9)
TimeSinceStart
ExponEqu <- 4*exp(0.9367*TimeSinceStart)
val <- vector(mode = 'double', length = 9)
for(i in 1:length(TimeSinceStart)){
val[i] <- 4*exp(0.9367*TimeSinceStart[i])
}
val <- round(val)
newpoptable <- cbind(TimeSinceStart,val)
colnames(newpoptable) <- c('Year','Population number')
newpoptable
TimeSinceStart <- c(1,2,3,4,5,6,7,8,9)
TimeSinceStart
ExponEqu <- 4*exp(0.9367*TimeSinceStart)
val <- vector(mode = 'double', length = 9)
for(i in 1:length(TimeSinceStart)){
val[i] <- 4*exp(0.9367*TimeSinceStart[i])
}
val <- round(val)
newpoptable <- cbind(TimeSinceStart,val)
colnames(newpoptable) <- c('Year','Population number')
library(knitr)
kable(newpoptable)
TimeSinceStart <- c(1,2,3,4,5,6,7,8,9)
TimeSinceStart
ExponEqu <- 4*exp(0.9367*TimeSinceStart)
val <- vector(mode = 'double', length = 9)
for(i in 1:length(TimeSinceStart)){
val[i] <- 4*exp(0.9367*TimeSinceStart[i])
}
val <- round(val)
newpoptable <- cbind(Time,val)
colnames(newpoptable) <- c('Year','Population number')
library(knitr)
kable(newpoptable)
TimeSinceStart <- c(0,1,2,3,4,5,6,7,8,9)
TimeSinceStart
ExponEqu <- 4*exp(0.9367*TimeSinceStart)
val <- vector(mode = 'double', length = 10)
for(i in 1:length(TimeSinceStart)){
val[i] <- 4*exp(0.9367*TimeSinceStart[i])
}
val <- round(val)
newpoptable <- cbind(Time,val)
colnames(newpoptable) <- c('Year','Population number')
library(knitr)
kable(newpoptable)
TimeSinceStart <- 0:9
TimeSinceStart
ExponEqu <- 4*exp(0.9367*TimeSinceStart)
val <- vector(mode = 'double', length = 10)
for(i in 1:length(TimeSinceStart)){
val[i] <- 4*exp(0.9367*TimeSinceStart[i])
}
val <- round(val)
newpoptable <- cbind(Time,val)
colnames(newpoptable) <- c('Year','Population number')
library(knitr)
kable(newpoptable)
library(knitr)
age <- 0:4
sx <- c(740,280,105,32,0)
bx <- c(0,0.4,1.3,3.8,NA)
lx <- sx/740
lxbx <- lx*bx
agelxbx <- age*lx*bx
px <- vector(mode = 'numeric',length = 5)
for(i in 1:length(lx)){
px[i] <- (lx[i+1]/lx[i])
}
pxbx1 <- vector(mode = 'numeric',length = 5)
for(i in 1:length(px)){
pxbx1[i] <- (px*bx[i+1])
}
lifetable2 <- cbind(age,sx,lx,px,bx,lxbx,agelxbx,pxbx1)
colnames(lifetable2) <- c('Age','S_x','l_x','p_x','b_x', 'lx_bx', 'x_lx_bx', 'px_bx+1')
lifetable2 <- as.data.frame(lifetable2)
kable(lifetable2)
library(knitr)
age <- 0:4
sx <- c(740,280,105,32,0)
bx <- c(0,0.4,1.3,3.8,NA)
lx <- sx/740
lxbx <- lx*bx
agelxbx <- age*lx*bx
px <- vector(mode = 'numeric',length = 5)
for(i in 1:length(lx)){
px[i] <- (lx[i+1]/lx[i])
}
pxbx1 <- vector(mode = 'numeric',length = 5)
for(i in 1:length(px)){
pxbx1[i] <- (px*bx[i+1])
}
lifetable2 <- cbind(age,sx,lx,px,bx,lxbx,agelxbx,pxbx1)
colnames(lifetable2) <- c('Age','S_x','l_x','p_x','b_x', 'lx_bx', 'x_lx_bx', 'px_bx+1')
lifetable2 <- as.data.frame(lifetable2)
kable(lifetable2)
head(lifetable)
age <- 0:4
sx <- c(740,280,105,32,0)
bx <- c(0,0.4,1.3,3.8,NA)
lx <- sx/740
px <- vector(mode = 'numeric',length = 5)
for(i in 1:length(lx)){
px[i] <- (lx[i+1]/lx[i])
}
lifetable <- cbind(age,sx,lx,px,bx)
colnames(lifetable) <- c('Age','S_x','l_x','p_x','b_x')
lifetable <- as.data.frame(lifetable)
head(lifetable)
lxbx <- lifetable$l_x*lifetable$b_x
xlxbx
xlxbx <- lifetable$Age*lifetable$l_x*lifetable$b_x
xlxbx
pxbx_1 <- vector(length =5, mode= 'double')
for(i in 1:5){
pxbx_1[i] <- lifetable$px[i]*lifetable$b_x[i+1]
}
head(lifetable)
for(i in 1:5){
pxbx_1[i] <- lifetable$p_x[i]*lifetable$b_x[i+1]
}
lifetable_6 <- cbind(lifetable, lxbx, xlxbx, pxbx_1)
lifetable_6
lxbx <- lifetable$l_x*lifetable$b_x
xlxbx <- lifetable$Age*lifetable$l_x*lifetable$b_x
pxbx_1 <- vector(length =5, mode= 'double')
for(i in 1:5){
pxbx_1[i] <- lifetable$p_x[i]*lifetable$b_x[i+1]
}
lifetable_6 <- cbind(lifetable, lxbx, xlxbx, pxbx_1)
colnames(lifetable_6) <- c('Age','S_x','l_x','p_x','b_x', 'l_x*b_x', 'x*l_x*b_x', 'p_x*b_x+1')
lifetable_6 <- as.data.frame(lifetable_6)
kable(lifetable_6)
c <- 24/(1^(-3/2))
c <- 24/(1^(-3/2))
c
c <- 24/1^(-3/2)
c
